Sun 06/22/2014 
11:39 PM
----- C:\Projects\git\Utils\FlowToOpenFormConverter\01.Open.Form.sql ----- 
IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = N'Open')
begin
	exec ('create schema [Open]')
end

SET QUOTED_IDENTIFIER ON

IF NOT EXISTS (SELECT * FROM sys.tables WHERE object_id = OBJECT_ID(N'[Open].[Form]'))
	create table [Open].[Form] 
	(
		[Id] [int] IDENTITY(1,1) NOT NULL,
		[Code] [varchar](255) NOT NULL,
		[Name] [varchar](255) NULL,
		[Value] [xml] 
	)

IF NOT EXISTS(select * FROM sys.views where name = 'getNewID')
begin
	exec ('create view getNewID as select newid() as new_id')
end

delete [Open].[Form] 
--inject default template
insert into [Open].[Form] (Code, Name, Value) 
	values
	('EmptyFormTemplate',
	'EmptyFormTemplate',
	'<FormDefinition xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms">
	<Id xmlns="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model">3</Id>
	<SchemaVersion xmlns="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model">5</SchemaVersion>
	<CancelSectionId i:nil="true" />
	<DisplayDefaultCommentFieldOnCancel>true</DisplayDefaultCommentFieldOnCancel>
	<Header>
		<HeaderItems />
		<ItemsPerColumn>1</ItemsPerColumn>
	</Header>
	<Name>Form Name</Name>
	<Pages />
	<QueryIntegrations xmlns:d2p1="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Integrations" i:nil="true" />
	<RequestNameQuestion xmlns:d2p1="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms.Questions" i:nil="true" />
	<Subtitle>Subtitle</Subtitle>
	<Title i:nil="true" />
	<Variables />
</FormDefinition>')

--inject default template
insert into [Open].[Form] (Code, Name, Value) 
	values
	('EmptySectionTemplate',
	'EmptySectionTemplate',
	'<Page z:Id="i1" xmlns:z="http://schemas.microsoft.com/2003/10/Serialization/" xmlns="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms">
			<ContainerSortOrder>0</ContainerSortOrder>
			<DisplayCriteria>
				<HideConditions xmlns:d5p1="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms.Conditions">
					<AdvancedExpression xmlns="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Expressions" />
					<CollectionType xmlns="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Expressions">All</CollectionType>
					<Conditions xmlns="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Expressions" />
				</HideConditions>
				<ReadOnlyConditions xmlns:d5p1="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms.Conditions">
					<AdvancedExpression xmlns="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Expressions" />
					<CollectionType xmlns="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Expressions">All</CollectionType>
					<Conditions xmlns="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Expressions" />
				</ReadOnlyConditions>
			</DisplayCriteria>
			<Id>146b3ca93d7-228-b80da0cf60</Id>
			<Items />
			<Title>Section Name</Title>
		</Page>')
		
		
		--inject default template
insert into [Open].[Form] (Code, Name, Value) 
	values
	('EmptyQuestionTemplate',
	'EmptyQuestionTemplate',
	'<FormComponentItem z:Id="i2" 
	xmlns:d5p1="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms.Questions" 
	i:type="d5p1:NumericInputQuestion"  
	xmlns="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms"
	xmlns:i="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:z="http://schemas.microsoft.com/2003/10/Serialization/">
					<ContainerSortOrder>0</ContainerSortOrder>
					<d5p1:DisplayCriteria>
						<HideConditions xmlns:d7p1="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms.Conditions">
							<AdvancedExpression i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Expressions" />
							<CollectionType xmlns="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Expressions">All</CollectionType>
							<Conditions xmlns="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Expressions" />
						</HideConditions>
						<ReadOnlyConditions xmlns:d7p1="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms.Conditions">
							<AdvancedExpression i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Expressions" />
							<CollectionType xmlns="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Expressions">All</CollectionType>
							<Conditions xmlns="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Expressions" />
						</ReadOnlyConditions>
					</d5p1:DisplayCriteria>
					<d5p1:DisplayWidth>Half</d5p1:DisplayWidth>
					<d5p1:HelpText i:nil="true" />
					<d5p1:Id>146b4387d5b-229-6017b3477f</d5p1:Id>
					<d5p1:Name />
					<d5p1:ParentQuestionId i:nil="true" />
					<d5p1:ReadOnly>false</d5p1:ReadOnly>
					<d5p1:RequestFieldType>None</d5p1:RequestFieldType>
					<d5p1:RequirementCriteria i:nil="true" />
					<d5p1:ShowRequiredIndicator>false</d5p1:ShowRequiredIndicator>
					<d5p1:Title>Test Question</d5p1:Title>
					<d5p1:ValueIntegrationDefinition xmlns:d6p1="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms.Questions.Integrations" i:nil="true" />
					<d5p1:DefaultValue i:nil="true" />
					<d5p1:AllowDecimals>true</d5p1:AllowDecimals>
					<d5p1:MaxValue i:nil="true" />
					<d5p1:MinValue i:nil="true" />
				</FormComponentItem>')
		
		
				--inject default template
insert into [Open].[Form] (Code, Name, Value) 
	values
	('EmptyGroupTemplate',
	'EmptyGroupTemplate',
		'<FormComponentItem z:Id="i4" i:type="Section"
			xmlns="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms"
			xmlns:i="http://www.w3.org/2001/XMLSchema-instance"
			xmlns:z="http://schemas.microsoft.com/2003/10/Serialization/">
					<ContainerSortOrder>0</ContainerSortOrder>
					<DisplayCriteria>
						<HideConditions xmlns:d7p1="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms.Conditions">
							<AdvancedExpression xmlns="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Expressions" />
							<CollectionType xmlns="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Expressions">All</CollectionType>
							<Conditions xmlns="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Expressions" />
						</HideConditions>
						<ReadOnlyConditions xmlns:d7p1="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms.Conditions">
							<AdvancedExpression xmlns="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Expressions" />
							<CollectionType xmlns="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Expressions">All</CollectionType>
							<Conditions xmlns="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Expressions" />
						</ReadOnlyConditions>
					</DisplayCriteria>
					<HideSectionOutline>false</HideSectionOutline>
					<Id>146b4aee623-22b-13d8bce394f</Id>
					<Questions xmlns:d6p1="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms.Questions">
					</Questions>
					<Title>Group 01</Title>
				</FormComponentItem>')
											
--inject default template
insert into [Open].[Form] (Code, Name, Value) 
	values
	('EmptyGrouppedQuestionTemplate',
	'EmptyGrouppedQuestionTemplate',
		'<d5p1:Question z:Id="i5" 
		i:type="d5p1:TextInputQuestion"
		xmlns="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms"
		xmlns:i="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:z="http://schemas.microsoft.com/2003/10/Serialization/"
		xmlns:d5p1="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms.Questions"
		>
							<ContainerSortOrder>0</ContainerSortOrder>
							<d5p1:DisplayCriteria>
								<HideConditions xmlns:d9p1="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms.Conditions">
									<AdvancedExpression i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Expressions" />
									<CollectionType xmlns="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Expressions">All</CollectionType>
									<Conditions xmlns="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Expressions" />
								</HideConditions>
								<ReadOnlyConditions xmlns:d9p1="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms.Conditions">
									<AdvancedExpression i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Expressions" />
									<CollectionType xmlns="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Expressions">All</CollectionType>
									<Conditions xmlns="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Expressions" />
								</ReadOnlyConditions>
							</d5p1:DisplayCriteria>
							<d5p1:DisplayWidth>Half</d5p1:DisplayWidth>
							<d5p1:HelpText i:nil="true" />
							<d5p1:Id>146b4b054b1-235-11db57855b5</d5p1:Id>
							<d5p1:Name />
							<d5p1:ParentQuestionId i:nil="true" />
							<d5p1:ReadOnly>false</d5p1:ReadOnly>
							<d5p1:RequestFieldType>None</d5p1:RequestFieldType>
							<d5p1:RequirementCriteria i:nil="true" />
							<d5p1:ShowRequiredIndicator>false</d5p1:ShowRequiredIndicator>
							<d5p1:Title>Untitled question</d5p1:Title>
							<d5p1:ValueIntegrationDefinition xmlns:d8p1="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms.Questions.Integrations" i:nil="true" />
							<d5p1:DefaultValue i:nil="true" />
							<d5p1:AllowDecimals>true</d5p1:AllowDecimals>
							<d5p1:MaxValue i:nil="true" />
							<d5p1:MinValue i:nil="true" />
						</d5p1:Question>')
								
		

(5 rows affected)
----- C:\Projects\git\Utils\FlowToOpenFormConverter\11.Open.SetQuestionBasicProperties.sql ----- 
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Open].[SetQuestionBasicProperties]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [Open].[SetQuestionBasicProperties]

SET QUOTED_IDENTIFIER ON

-- =============================================
-- Author:		<Sergey Dzyuban>
-- Create date: <2014-06-19>
-- Description:	<Set basic properties like Title and IDs>
-- =============================================
CREATE FUNCTION [Open].[SetQuestionBasicProperties]
(
	@question XML, 
	@elementLabel varchar(max),
	@elementId int
	
)
RETURNS XML
AS
BEGIN
			declare @question_guid uniqueidentifier = (select new_id from getNewID)		

			set @question.modify('declare default element namespace "http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms";
					declare namespace z="http://schemas.microsoft.com/2003/10/Serialization/";
					 declare namespace d5p1="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms.Questions";
					  replace value of (//child::*:Title/text()) [1]  with sql:variable("@elementLabel")') 
					
			set @question.modify('declare default element namespace "http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms";
					declare namespace z="http://schemas.microsoft.com/2003/10/Serialization/";
					 declare namespace d5p1="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms.Questions";
					  replace value of (//child::*:Id/text()) [1]  with sql:variable("@question_guid")')
					  	  
			set @question.modify('declare default element namespace "http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms";
					declare namespace z="http://schemas.microsoft.com/2003/10/Serialization/";
					  replace value of (/FormComponentItem[1]/@z:Id)  with sql:variable("@elementId")') 
					  
			set @question.modify('declare default element namespace "http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms";
					declare namespace z="http://schemas.microsoft.com/2003/10/Serialization/";
					 declare namespace d5p1="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms.Questions";
					  replace value of (/d5p1:Question[1]/@z:Id)  with sql:variable("@elementId")') 
					  
			return @question

END



----- C:\Projects\git\Utils\FlowToOpenFormConverter\12.Open.ConvertElementToQuestion.sql ----- 
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Open].[ConvertElementToQuestion]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [Open].[ConvertElementToQuestion]

SET QUOTED_IDENTIFIER ON


-- =============================================
-- Author:		<Sergey Dzyuban>
-- Create date: <2014-06-19>
-- Description:	<Set basic properties like Title and IDs>
-- =============================================
CREATE FUNCTION [Open].[ConvertElementToQuestion]
(
	@question XML, 
	@elementId int
	
)
RETURNS XML
AS
BEGIN
			
	declare @control varchar(255) = (select top 1 c.Code from UI.Element e inner join UI.Control c on e.ControlId = c.id where e.Id = @elementId)

	if (@control = 'TextBox')
	begin
	
		set @question.modify('declare default element namespace "http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms";
					  replace value of (//@*:type) [1]  with "d5p1:TextInputQuestion"')
					  
	end
	
	if (@control = 'RadioList')
	begin
	
		set @question.modify('declare default element namespace "http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms";
					  replace value of (//@*:type) [1]  with "d5p1:BooleanRadioButtonInputQuestion"')
					  
	end
	
	if (@control = 'ComboBox')
	begin
	
		set @question.modify('declare default element namespace "http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms";
					  replace value of (//@*:type) [1]  with "d5p1:DropdownListInputQuestion"')
					  
	end
	
	if (@control = 'CheckBox')
	begin
	
		set @question.modify('declare default element namespace "http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms";
					  replace value of (//@*:type) [1]  with "d5p1:BooleanCheckboxInputQuestion"')
					  
	end
	
	if (@control = 'DatePicker')
	begin
	
		set @question.modify('declare default element namespace "http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms";
					  replace value of (//@*:type) [1]  with "d5p1:DateTimeInputQuestion"')
					  
	end
	
	if (@control = 'Label')
	begin
	
		set @question.modify('declare default element namespace "http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms";
					  replace value of (//@*:type) [1]  with "d5p1:TextInputQuestion"')
					  
	end
	
	if (@control = 'NumberEditor' or @control = 'PercentEditor' or  @control = 'MoneyEditor')
	begin
	
		set @question.modify('declare default element namespace "http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms";
					  replace value of (//@*:type) [1]  with "d5p1:NumericInputQuestion"')
					  
	end
	
					  
	return @question
END



----- C:\Projects\git\Utils\FlowToOpenFormConverter\13.Open.FetchOpenElelmentsBySectionId.sql ----- 
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Open].[FetchOpenElelmentsBySectionId]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [Open].[FetchOpenElelmentsBySectionId]

SET QUOTED_IDENTIFIER ON

-- =============================================
-- Author:		<Sergey Dzyuban>
-- Create date: <2014-06-19>
-- Description:	<Get existing form elements by Section>
-- =============================================
CREATE function [Open].[FetchOpenElelmentsBySectionId] 
	(@SectionId int,
	@Section XML,
	@isFieldsetContent bit)
	Returns XML
AS 
BEGIN
	
	declare @form XML
	declare  @i int = 0
		
	
	DECLARE elementCursor CURSOR FOR
	select e.Id, e.Name, c.Name from UI.Element e 
	inner join UI.Control c on c.Id = e.ControlId 
	where e.ParentId = @SectionId
	order by e.Row, e.Id
	
	declare @elementId int 
	declare @elementName varchar(max) 
	declare @controlName varchar(255) 
	
	open elementCursor
	
	FETCH NEXT FROM elementCursor 
			INTO @elementId, @elementName, @controlName
	WHILE @@FETCH_STATUS = 0
		BEGIN

			declare @elementLabel varchar(max)= (select top 1 val.Value from UI.Element e
				inner join UI.ElementPropertyValue epv on e.Id = epv.ElementId
				inner join UI.Property p on p.Id = epv.PropertyId
				inner join UI.ElementPropertyValue val on val.ElementId = e.Id
				 where p.Name = 'Label' and e.Id = @elementId)
				 
			if (@elementLabel is null or @elementLabel = '') 
				set @elementLabel = @elementName 
			
			set @elementLabel = (select replace(@elementLabel, '''', '`'))
					  	 
			--QUESTION	
			declare @question_guid uniqueidentifier = (select new_id from getNewID)		
			  
			declare @question XML 
			if(@controlName = 'Fieldset' OR @controlName = 'Panel')
				begin
					set @question = (select Value from [Open].[Form] where Code = 'EmptyGroupTemplate')
					exec @question = [Open].SetQuestionBasicProperties @question,  @elementLabel, @elementId
					exec @question = [Open].ConvertElementToQuestion @question,  @elementId
					exec @question = [Open].FetchOpenElelmentsBySectionId @elementId, @question, 1
				end
			else
				begin
					if(@isFieldsetContent = 1)
						begin
							set @question = (select Value from [Open].[Form] where Code = 'EmptyGrouppedQuestionTemplate')
						end
					else
						begin
							set @question = (select Value from [Open].[Form] where Code = 'EmptyQuestionTemplate')
						end
						
					exec @question = [Open].SetQuestionBasicProperties @question,  @elementLabel, @elementId	
					exec @question = [Open].ConvertElementToQuestion @question,  @elementId
					
				end
	
			-- ATTACH QUESTION TO PARENT
				
				if(@isFieldsetContent = 1)
						begin
							set @section.modify('declare default element namespace "http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms";
							 declare namespace d5p1="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms.Questions";
							 insert sql:variable("@question") into (/FormComponentItem/Questions) [1]')
						end
					else
						begin
							set @section.modify('declare default element namespace "http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms";
							 declare namespace d5p1="http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms.Questions";
							 insert sql:variable("@question") into (/Page/Items) [1]')
						end	  
			
			
			FETCH NEXT FROM elementCursor 
				INTO @elementId, @elementName, @controlName
		END 
	CLOSE elementCursor;
	DEALLOCATE elementCursor;

	return @Section
    
END





----- C:\Projects\git\Utils\FlowToOpenFormConverter\20.Open.ModifyOpenFormByName.sql ----- 
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Open].[ModifyOpenFormByName]') AND type in (N'P', N'PC'))
DROP PROCEDURE [Open].[ModifyOpenFormByName]

SET QUOTED_IDENTIFIER ON

-- =============================================
-- Author:		<Sergey Dzyuban>
-- Create date: <2014-06-19>
-- Description:	<Mofify existing form / or / create new one>
-- =============================================
CREATE PROCEDURE [Open].[ModifyOpenFormByName] 
	@FormName varchar(255)
AS
BEGIN
	
	declare @form XML
	declare  @i int = 0

	select @form = Value from [Open].[Form] where Code = 'EmptyFormTemplate';
	set @form.modify('declare default element namespace "http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms";
					  replace value of (/FormDefinition/Name/text()) [1]  with sql:variable("@FormName")')
	
	
	DECLARE sectionCursor CURSOR FOR
	select e.id from UI.Form f
	inner join UI.Element e on e.FormId = f.Id 
	inner join UI.Control c on c.Id = e.ControlId 
	where f.Name like '%Request%Editor%' and c.Name = 'Section'  
	order by e.Row, e.Id
	
	declare @elementId int 
	
	open sectionCursor
	
	FETCH NEXT FROM sectionCursor 
			INTO @elementId
	WHILE @@FETCH_STATUS = 0
		BEGIN
	    
			declare @elementName varchar(255) = (select top 1 Name from UI.Element where Id = @elementId)
			declare @elementLabel varchar(max)= (select top 1 val.Value from UI.Element e
				inner join UI.ElementPropertyValue epv on e.Id = epv.ElementId
				inner join UI.Property p on p.Id = epv.PropertyId
				inner join UI.ElementPropertyValue val on val.ElementId = e.Id
				 where p.Name = 'Label' and e.Id = @elementId)
			
			declare @section XML =  (select Value from [Open].[Form] where Code = 'EmptySectionTemplate')
			set @section.modify('declare default element namespace "http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms";
					  replace value of (/Page/Title/text()) [1]  with sql:variable("@elementLabel")')  
					  
			declare @guid uniqueidentifier = (select NEWID())
			set @section.modify('declare default element namespace "http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms";
					  replace value of (/Page/Id/text()) [1]  with sql:variable("@guid")') 
					  
			set @section.modify('declare default element namespace "http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms";
					declare namespace z="http://schemas.microsoft.com/2003/10/Serialization/";
					  replace value of (/Page[1]/@z:Id)  with sql:variable("@elementName")') 
			
			-- Looks for questions inside section  	 
			exec @section = [Open].FetchOpenElelmentsBySectionId @elementId, @section, 0
			
			--FORM
			set @form.modify('declare default element namespace "http://schemas.datacontract.org/2004/07/IntApp.Wilco.Model.Forms";
					  insert sql:variable("@section") into (/FormDefinition/Pages) [1]')
			
			FETCH NEXT FROM sectionCursor 
			INTO @elementId
		END 
	CLOSE sectionCursor;
	DEALLOCATE sectionCursor;

	select @form
    
END

----- C:\Projects\git\Utils\FlowToOpenFormConverter\GenerateFormXml.sql ----- 
----- C:\Projects\git\Utils\FlowToOpenFormConverter\_CreateXmlDataOutput.sql ----- 

(1 rows affected)
